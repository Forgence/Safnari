name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.20.2

    - name: Run tests
      working-directory: ./src
      run: go test -v ./...

    - name: Build executables
      working-directory: ./src
      run: |
        GOOS=windows GOARCH=amd64 go build -o ../safnari-windows-amd64.exe
        GOOS=darwin GOARCH=amd64 go build -o ../safnari-darwin-amd64
        GOOS=linux GOARCH=amd64 go build -o ../safnari-linux-amd64

    - name: Get current datetime
      id: current_time
      run: echo "::set-output name=current_time::$(date +'%Y-%m-%dT%H-%M-%S')"

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: safnari-${{ steps.current_time.outputs.current_time }}
        release_name: Safnari Release ${{ steps.current_time.outputs.current_time }}
        body: Release of Safnari version ${{ steps.current_time.outputs.current_time }}
        draft: false
        prerelease: false

    - name: Upload Windows Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./safnari-windows-amd64.exe
        asset_name: safnari-windows-amd64.exe
        asset_content_type: application/octet-stream

    - name: Upload macOS Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./safnari-darwin-amd64
        asset_name: safnari-darwin-amd64
        asset_content_type: application/octet-stream

    - name: Upload Linux Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./safnari-linux-amd64
        asset_name: safnari-linux-amd64
        asset_content_type: application/octet-stream